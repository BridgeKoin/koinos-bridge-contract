{
    "methods": {
        "initialize": {
            "argument": "bridge.initialize_arguments",
            "return": "bridge.empty_object",
            "description": "Initialize contract",
            "entry-point": "0x470ebe82",
            "read-only": false
        },
        "get_validators": {
            "argument": "bridge.get_validators_arguments",
            "return": "bridge.repeated_addresses",
            "description": "Get validators",
            "entry-point": "0x50068f92",
            "read-only": true
        },
        "get_supported_tokens": {
            "argument": "bridge.get_supported_tokens_arguments",
            "return": "bridge.repeated_addresses",
            "description": "Get supported tokens",
            "entry-point": "0xc8e36f04",
            "read-only": true
        },
        "get_supported_wrapped_tokens": {
            "argument": "bridge.get_supported_wrapped_tokens_arguments",
            "return": "bridge.repeated_addresses",
            "description": "Get supported wrapped tokens",
            "entry-point": "0x2f540a24",
            "read-only": true
        },
        "get_metadata": {
            "argument": "bridge.get_metadata_arguments",
            "return": "bridge.metadata_object",
            "description": "Get metadata",
            "entry-point": "0xfcf7a68f",
            "read-only": true
        },
        "set_pause": {
            "argument": "bridge.set_pause_arguments",
            "return": "bridge.empty_object",
            "description": "Pause/Unpause bridge",
            "entry-point": "0x39a2c4e4",
            "read-only": false
        },
        "transfer_tokens": {
            "argument": "bridge.transfer_tokens_arguments",
            "return": "bridge.empty_object",
            "description": "Transfer tokens",
            "entry-point": "0x1d2e4ff3",
            "read-only": false
        },
        "complete_transfer": {
            "argument": "bridge.complete_transfer_arguments",
            "return": "bridge.empty_object",
            "description": "Complete a bridge transfer",
            "entry-point": "0x4d4d3ef9",
            "read-only": false
        },
        "add_validator": {
            "argument": "bridge.add_validator_arguments",
            "return": "bridge.empty_object",
            "description": "Add a new validator",
            "entry-point": "0xfc15f1be",
            "read-only": false
        },
        "remove_validator": {
            "argument": "bridge.remove_validator_arguments",
            "return": "bridge.empty_object",
            "description": "Remove an existing validator",
            "entry-point": "0xff61ff26",
            "read-only": false
        },
        "add_supported_token": {
            "argument": "bridge.add_supported_token_arguments",
            "return": "bridge.empty_object",
            "description": "Add support for a new token",
            "entry-point": "0xc5ce0923",
            "read-only": false
        },
        "remove_supported_token": {
            "argument": "bridge.remove_supported_token_arguments",
            "return": "bridge.empty_object",
            "description": "Remove an existing supported token",
            "entry-point": "0x2d3a597e",
            "read-only": false
        },
        "add_supported_wrapped_token": {
            "argument": "bridge.add_supported_wrapped_token_arguments",
            "return": "bridge.empty_object",
            "description": "Add support for a new wrapped token",
            "entry-point": "0x5457c617",
            "read-only": false
        },
        "remove_supported_wrapped_token": {
            "argument": "bridge.remove_supported_wrapped_token_arguments",
            "return": "bridge.empty_object",
            "description": "Remove an existing supported token",
            "entry-point": "0x927c7515",
            "read-only": false
        }
    },
    "types": "CtwXChthc3NlbWJseS9wcm90by9icmlkZ2UucHJvdG8SBmJyaWRnZRoUa29pbm9zL29wdGlvbnMucHJvdG8iSwoUaW5pdGlhbGl6ZV9hcmd1bWVudHMSMwoSaW5pdGlhbF92YWxpZGF0b3JzGAEgAygMQgSAtRgGUhFpbml0aWFsVmFsaWRhdG9ycyJqChhnZXRfdmFsaWRhdG9yc19hcmd1bWVudHMSGgoFc3RhcnQYASABKAxCBIC1GAZSBXN0YXJ0EhQKBWxpbWl0GAIgASgFUgVsaW1pdBIcCglkaXJlY3Rpb24YAyABKAVSCWRpcmVjdGlvbiJwCh5nZXRfc3VwcG9ydGVkX3Rva2Vuc19hcmd1bWVudHMSGgoFc3RhcnQYASABKAxCBIC1GAZSBXN0YXJ0EhQKBWxpbWl0GAIgASgFUgVsaW1pdBIcCglkaXJlY3Rpb24YAyABKA1SCWRpcmVjdGlvbiJ4CiZnZXRfc3VwcG9ydGVkX3dyYXBwZWRfdG9rZW5zX2FyZ3VtZW50cxIaCgVzdGFydBgBIAEoDEIEgLUYBlIFc3RhcnQSFAoFbGltaXQYAiABKAVSBWxpbWl0EhwKCWRpcmVjdGlvbhgDIAEoDVIJZGlyZWN0aW9uIjgKEnJlcGVhdGVkX2FkZHJlc3NlcxIiCglhZGRyZXNzZXMYASADKAxCBIC1GAZSCWFkZHJlc3NlcyIYChZnZXRfbWV0YWRhdGFfYXJndW1lbnRzIm8KE3NldF9wYXVzZV9hcmd1bWVudHMSHgoKc2lnbmF0dXJlcxgBIAMoDFIKc2lnbmF0dXJlcxIUCgVwYXVzZRgCIAEoCFIFcGF1c2USIgoKZXhwaXJhdGlvbhgDIAEoBEICMAFSCmV4cGlyYXRpb24iiwEKGXRyYW5zZmVyX3Rva2Vuc19hcmd1bWVudHMSGAoEZnJvbRgBIAEoDEIEgLUYBlIEZnJvbRIaCgV0b2tlbhgCIAEoDEIEgLUYBVIFdG9rZW4SGgoGYW1vdW50GAMgASgEQgIwAVIGYW1vdW50EhwKCXJlY2lwaWVudBgEIAEoCVIJcmVjaXBpZW50IugBChtjb21wbGV0ZV90cmFuc2Zlcl9hcmd1bWVudHMSKwoOdHJhbnNhY3Rpb25faWQYASABKAxCBIC1GARSDXRyYW5zYWN0aW9uSWQSGgoFdG9rZW4YAiABKAxCBIC1GAVSBXRva2VuEiIKCXJlY2lwaWVudBgDIAEoDEIEgLUYBlIJcmVjaXBpZW50EhgKBXZhbHVlGAQgASgEQgIwAVIFdmFsdWUSHgoKc2lnbmF0dXJlcxgGIAMoDFIKc2lnbmF0dXJlcxIiCgpleHBpcmF0aW9uGAcgASgEQgIwAVIKZXhwaXJhdGlvbiKBAQoXYWRkX3ZhbGlkYXRvcl9hcmd1bWVudHMSHgoKc2lnbmF0dXJlcxgBIAMoDFIKc2lnbmF0dXJlcxIiCgl2YWxpZGF0b3IYAiABKAxCBIC1GAZSCXZhbGlkYXRvchIiCgpleHBpcmF0aW9uGAMgASgEQgIwAVIKZXhwaXJhdGlvbiKEAQoacmVtb3ZlX3ZhbGlkYXRvcl9hcmd1bWVudHMSHgoKc2lnbmF0dXJlcxgBIAMoDFIKc2lnbmF0dXJlcxIiCgl2YWxpZGF0b3IYAiABKAxCBIC1GAZSCXZhbGlkYXRvchIiCgpleHBpcmF0aW9uGAMgASgEQgIwAVIKZXhwaXJhdGlvbiJ/Ch1hZGRfc3VwcG9ydGVkX3Rva2VuX2FyZ3VtZW50cxIeCgpzaWduYXR1cmVzGAEgAygMUgpzaWduYXR1cmVzEhoKBXRva2VuGAIgASgMQgSAtRgFUgV0b2tlbhIiCgpleHBpcmF0aW9uGAMgASgEQgIwAVIKZXhwaXJhdGlvbiKCAQogcmVtb3ZlX3N1cHBvcnRlZF90b2tlbl9hcmd1bWVudHMSHgoKc2lnbmF0dXJlcxgBIAMoDFIKc2lnbmF0dXJlcxIaCgV0b2tlbhgCIAEoDEIEgLUYBVIFdG9rZW4SIgoKZXhwaXJhdGlvbhgDIAEoBEICMAFSCmV4cGlyYXRpb24ihwEKJWFkZF9zdXBwb3J0ZWRfd3JhcHBlZF90b2tlbl9hcmd1bWVudHMSHgoKc2lnbmF0dXJlcxgBIAMoDFIKc2lnbmF0dXJlcxIaCgV0b2tlbhgCIAEoDEIEgLUYBVIFdG9rZW4SIgoKZXhwaXJhdGlvbhgDIAEoBEICMAFSCmV4cGlyYXRpb24iigEKKHJlbW92ZV9zdXBwb3J0ZWRfd3JhcHBlZF90b2tlbl9hcmd1bWVudHMSHgoKc2lnbmF0dXJlcxgBIAMoDFIKc2lnbmF0dXJlcxIaCgV0b2tlbhgCIAEoDEIEgLUYBVIFdG9rZW4SIgoKZXhwaXJhdGlvbhgDIAEoBEICMAFSCmV4cGlyYXRpb24igQEKE3Rva2Vuc19sb2NrZWRfZXZlbnQSGAoEZnJvbRgBIAEoDEIEgLUYBlIEZnJvbRIaCgV0b2tlbhgCIAEoDEIEgLUYBVIFdG9rZW4SFgoGYW1vdW50GAMgASgJUgZhbW91bnQSHAoJcmVjaXBpZW50GAQgASgJUglyZWNpcGllbnQiNQoYdHJhbnNmZXJfY29tcGxldGVkX2V2ZW50EhkKBXR4X2lkGAEgASgMQgSAtRgEUgR0eElkIrQBChZhZGRfcmVtb3ZlX2FjdGlvbl9oYXNoEikKBmFjdGlvbhgBIAEoDjIRLmJyaWRnZS5hY3Rpb25faWRSBmFjdGlvbhIYCgdhZGRyZXNzGAIgASgMUgdhZGRyZXNzEhQKBW5vbmNlGAMgASgEUgVub25jZRIfCgtjb250cmFjdF9pZBgEIAEoDFIKY29udHJhY3RJZBIeCgpleHBpcmF0aW9uGAUgASgEUgpleHBpcmF0aW9uIq8BChVzZXRfcGF1c2VfYWN0aW9uX2hhc2gSKQoGYWN0aW9uGAEgASgOMhEuYnJpZGdlLmFjdGlvbl9pZFIGYWN0aW9uEhQKBXBhdXNlGAIgASgIUgVwYXVzZRIUCgVub25jZRgDIAEoBFIFbm9uY2USHwoLY29udHJhY3RfaWQYBCABKAxSCmNvbnRyYWN0SWQSHgoKZXhwaXJhdGlvbhgFIAEoBFIKZXhwaXJhdGlvbiL3AQoWY29tcGxldGVfdHJhbnNmZXJfaGFzaBIpCgZhY3Rpb24YASABKA4yES5icmlkZ2UuYWN0aW9uX2lkUgZhY3Rpb24SJQoOdHJhbnNhY3Rpb25faWQYAiABKAxSDXRyYW5zYWN0aW9uSWQSFAoFdG9rZW4YAyABKAxSBXRva2VuEhwKCXJlY2lwaWVudBgEIAEoDFIJcmVjaXBpZW50EhYKBmFtb3VudBgFIAEoBFIGYW1vdW50Eh8KC2NvbnRyYWN0X2lkGAYgASgMUgpjb250cmFjdElkEh4KCmV4cGlyYXRpb24YByABKARSCmV4cGlyYXRpb24icgoPbWV0YWRhdGFfb2JqZWN0EiAKC2luaXRpYWxpemVkGAEgASgIUgtpbml0aWFsaXplZBIYCgVub25jZRgCIAEoBEICMAFSBW5vbmNlEiMKDW5iX3ZhbGlkYXRvcnMYAyABKA1SDG5iVmFsaWRhdG9ycyIOCgxlbXB0eV9vYmplY3Qq6QEKCWFjdGlvbl9pZBITCg9yZXNlcnZlZF9hY3Rpb24QABIRCg1hZGRfdmFsaWRhdG9yEAESFAoQcmVtb3ZlX3ZhbGlkYXRvchACEhcKE2FkZF9zdXBwb3J0ZWRfdG9rZW4QAxIaChZyZW1vdmVfc3VwcG9ydGVkX3Rva2VuEAQSHwobYWRkX3N1cHBvcnRlZF93cmFwcGVkX3Rva2VuEAUSIgoecmVtb3ZlX3N1cHBvcnRlZF93cmFwcGVkX3Rva2VuEAYSDQoJc2V0X3BhdXNlEAcSFQoRY29tcGxldGVfdHJhbnNmZXIQCGIGcHJvdG8z"
}